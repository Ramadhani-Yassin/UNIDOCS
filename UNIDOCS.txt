-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.generated_letters
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    request_id uuid,
    verification_code character varying(50) COLLATE pg_catalog."default",
    download_count integer DEFAULT 0,
    CONSTRAINT generated_letters_pkey PRIMARY KEY (id),
    CONSTRAINT generated_letters_request_id_key UNIQUE (request_id),
    CONSTRAINT generated_letters_verification_code_key UNIQUE (verification_code)
);

CREATE TABLE IF NOT EXISTS public.letter_requests
(
    id uuid NOT NULL,
    delivery_method character varying(255) COLLATE pg_catalog."default",
    effective_date date,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    end_date date,
    full_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    letter_type character varying(255) COLLATE pg_catalog."default" NOT NULL,
    organization_name character varying(255) COLLATE pg_catalog."default",
    phone_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    program_of_study character varying(255) COLLATE pg_catalog."default" NOT NULL,
    reason_for_request text COLLATE pg_catalog."default",
    receiving_institution character varying(255) COLLATE pg_catalog."default",
    recommendation_purpose character varying(255) COLLATE pg_catalog."default",
    registration_number character varying(255) COLLATE pg_catalog."default" NOT NULL,
    request_date timestamp(6) without time zone NOT NULL,
    research_title character varying(255) COLLATE pg_catalog."default",
    start_date date,
    submission_deadline date,
    transcript_purpose character varying(255) COLLATE pg_catalog."default",
    year_of_study integer NOT NULL,
    user_id bigint,
    template_id uuid,
    CONSTRAINT letter_requests_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.letter_template
(
    id uuid NOT NULL DEFAULT uuid_generate_v4(),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default",
    template_path character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    code character varying(50) COLLATE pg_catalog."default",
    required_fields jsonb,
    placeholders jsonb,
    is_active boolean DEFAULT true,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    template_type character varying(20) COLLATE pg_catalog."default" DEFAULT 'DOCX'::character varying,
    CONSTRAINT letter_template_pkey PRIMARY KEY (id),
    CONSTRAINT letter_template_code_key UNIQUE (code)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL DEFAULT nextval('user_id_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    role character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT user_email_key UNIQUE (email)
);

ALTER TABLE IF EXISTS public.generated_letters
    ADD CONSTRAINT fk_generated_letters_request FOREIGN KEY (request_id)
    REFERENCES public.letter_requests (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS generated_letters_request_id_key
    ON public.generated_letters(request_id);


ALTER TABLE IF EXISTS public.letter_requests
    ADD CONSTRAINT fk5i74g4vrm9lpjyb6him0vd5be FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.letter_requests
    ADD CONSTRAINT fk_letter_requests_template FOREIGN KEY (template_id)
    REFERENCES public.letter_template (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;

END;
